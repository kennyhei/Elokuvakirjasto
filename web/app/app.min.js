var MovieApp=angular.module("MovieApp",["ngRoute","firebase"]);MovieApp.config(function($httpProvider){delete $httpProvider.defaults.headers.common["X-Requested-With"]}),MovieApp.config(function($routeProvider){var baseRoot="app/js/views/";$routeProvider.when("/",{controller:"ListMoviesController",templateUrl:baseRoot+"list_movies.html",resolve:{currentAuth:function(AuthenticationService){return AuthenticationService.isLoggedIn()}}}).when("/login",{controller:"UserController",templateUrl:baseRoot+"login.html",resolve:{currentAuth:function(AuthenticationService){return AuthenticationService.isLoggedIn()}}}).when("/movies",{controller:"ListMoviesController",templateUrl:baseRoot+"list_movies.html",resolve:{currentAuth:function(AuthenticationService){return AuthenticationService.isLoggedIn()}}}).when("/movies/new",{controller:"AddMovieController",templateUrl:baseRoot+"add_movie.html",resolve:{currentAuth:function(AuthenticationService){return AuthenticationService.isLoggedIn()}}}).when("/movies/search",{controller:"SearchMoviesController",templateUrl:baseRoot+"search_movies.html",resolve:{currentAuth:function(AuthenticationService){return AuthenticationService.isLoggedIn()}}}).when("/movies/:key",{controller:"ShowMovieController",templateUrl:baseRoot+"show_movie.html",resolve:{currentAuth:function(AuthenticationService){return AuthenticationService.isLoggedIn()}}}).when("/movies/:key/edit",{controller:"EditMovieController",templateUrl:baseRoot+"edit_movie.html",resolve:{currentAuth:function(AuthenticationService){return AuthenticationService.isLoggedIn()}}}).otherwise({redirectTo:"/"})}),MovieApp.run(function(AuthenticationService,$location,$rootScope){$rootScope.logout=function(){AuthenticationService.logout(),$location.path("/login")},$rootScope.userLoggedIn=function(){return AuthenticationService.getUserLoggedIn()}}),MovieApp.controller("AddMovieController",function($scope,$location,currentAuth,FirebaseService){currentAuth||$location.path("/login"),$scope.partial={url:"app/js/views/partials/movie_form.html"},$scope.addMovie=function(){FirebaseService.addMovie({name:$scope.name,director:$scope.director,release:$scope.release,description:$scope.description}),$scope.name="",$scope.director="",$scope.release="",$scope.description="",$location.path("/movies")}}),MovieApp.controller("EditMovieController",function($scope,$routeParams,$location,currentAuth,FirebaseService){currentAuth||$location.path("/login"),$scope.partial={url:"app/js/views/partials/movie_form.html"};var key=$routeParams.key;FirebaseService.getMovie(key,function(movie){$scope.movie=movie,$scope.name=movie.name,$scope.director=movie.director,$scope.release=movie.release,$scope.description=movie.description}),$scope.editMovie=function(movie){movie.name=$scope.name,movie.director=$scope.director,movie.release=$scope.release,movie.description=$scope.description,FirebaseService.editMovie(movie),$location.path("/movies/"+$routeParams.key)}}),MovieApp.controller("ListMoviesController",function($scope,$location,currentAuth,FirebaseService){$scope.movies=FirebaseService.getMovies(),$scope.removeMovie=function(movie){FirebaseService.removeMovie(movie)}}),MovieApp.controller("SearchMoviesController",function($scope,$location,currentAuth,OMDbService){$scope.searched=!1,$scope.findMovies=function(){var title=$scope.title,year=$scope.year;OMDbService.findMovies(title,year).then(function(results){results.data.Search?$scope.movies=results.data.Search.filter(function(movie){return"movie"===movie.Type}):$scope.movies=null,$scope.searched=!0})}}),MovieApp.controller("ShowMovieController",function($scope,$location,$routeParams,currentAuth,FirebaseService){currentAuth||$location.path("/login");var key=$routeParams.key;FirebaseService.getMovie(key,function(movie){$scope.movie=movie})}),MovieApp.controller("UserController",function($rootScope,$scope,$location,AuthenticationService){$scope.registered=!0,$scope.login=function(){AuthenticationService.login($scope.email,$scope.password).then(function(){$location.path("/movies"),$scope.registered=!0}).catch(function(){$scope.message="Wrong email or password!"})},$scope.register=function(){AuthenticationService.createUser($scope.email,$scope.password).then(function(){$scope.login()}).catch(function(){$scope.message="Unexpected error occurred. Try again."})}}),MovieApp.service("AuthenticationService",function($firebaseAuth){var firebaseRef=new Firebase("https://torrid-torch-7773.firebaseio.com/movies"),firebaseAuth=$firebaseAuth(firebaseRef);this.login=function(email,password){return firebaseAuth.$authWithPassword({email:email,password:password})},this.createUser=function(email,password){return firebaseAuth.$createUser({email:email,password:password})},this.isLoggedIn=function(){return firebaseAuth.$waitForAuth()},this.logout=function(){firebaseAuth.$unauth()},this.getUserLoggedIn=function(){return firebaseAuth.$getAuth()}}),MovieApp.service("FirebaseService",function($firebaseArray){var firebaseRef=new Firebase("https://torrid-torch-7773.firebaseio.com/movies"),movies=$firebaseArray(firebaseRef);this.getMovie=function(key,callback){movies.$loaded(function(){callback(movies.$getRecord(key))})},this.getMovies=function(){return movies},this.addMovie=function(movie){movies.$add(movie)},this.removeMovie=function(movie){movies.$remove(movie)},this.editMovie=function(movie){movies.$save(movie)}}),MovieApp.service("OMDbService",function($http){this.findMovies=function(name,year){return $http.get("https://www.omdbapi.com",{params:{s:name,y:year}})}});